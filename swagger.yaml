swagger: "2.0"
info:
  title: Bank Argent API documentation
  description: Contains all available API endpoints in this codebase
  version: "1.0.0"
  termsOfService: "http://swagger.io/terms/"
host: localhost:3001
basePath: /api/v1
schemes:
  - http
paths:
  /user/login:
    post:
      tags:
        - User Module
      summary: Login
      description: API for Login
      parameters:
        - in: body
          name: body
          description: Login Payload
          required: true
          schema:
            $ref: "#/definitions/Login"
      produces:
        - application/json
      responses:
        "200":
          description: Login Successfully
          schema:
            $ref: "#/definitions/LoginResponse"
        "400":
          description: Invalid Fields
        "500":
          description: Internal Server Error
  /user/signup:
    post:
      tags:
        - User Module
      summary: Signup
      description: API for Signup
      parameters:
        - in: body
          name: body
          description: Signup Payload
          required: true
          schema:
            $ref: "#/definitions/User"
      produces:
        - application/json
      responses:
        "200":
          description: Signup Successfully
          schema:
            $ref: "#/definitions/ApiResponse"
        "400":
          description: Invalid Fields
        "500":
          description: Internal Server Error
  /user/profile:
    post:
      security:
        - Bearer: []
      tags:
        - User Module
      summary: User Profile API
      description: API for fetching a user profile
      parameters:
        - in: header
          name: Authorization
          description: Attach Bearer JWT token
          type: string
          required: true
      produces:
        - application/json
      responses:
        "200":
          description: User profile retrieved successfully
          schema:
            $ref: "#/definitions/ApiResponse"
        "400":
          description: Invalid Fields
        "500":
          description: Internal Server Error
    put:
      security:
        - Bearer: []
      tags:
        - User Module
      summary: User Profile API
      description: API for updating a user profile
      parameters:
        - in: header
          name: Authorization
          description: Attach Bearer JWT token
          type: string
          required: true
        - in: body
          name: body
          description: Update user profile attributes
          required: true
          schema:
            $ref: "#/definitions/UserProfile"
      produces:
        - application/json
      responses:
        "200":
          description: User profile updated successfully
          schema:
            $ref: "#/definitions/ApiResponse"
        "400":
          description: Invalid Fields
        "500":
          description: Internal Server Error
  /user/transactions:
    get:
      security:
        - Bearer: []
      tags:
        - Transaction Module
      summary: Get User Transactions
      description: API for fetching user's transactions
      parameters:
        - in: header
          name: Authorization
          description: Attach Bearer JWT token
          type: string
          required: true
      produces:
        - application/json
      responses:
        "200":
          description: User transactions retrieved successfully
          schema:
            $ref: "#/definitions/TransactionsResponse"
        "400":
          description: Invalid Fields
        "401":
          description: Unauthorized
        "500":
          description: Internal Server Error
  /user/transaction:
    post:
      security:
        - Bearer: []
      tags:
        - Transaction Module
      summary: Create Transaction
      description: API for creating a new transaction
      parameters:
        - in: header
          name: Authorization
          description: Attach Bearer JWT token
          type: string
          required: true
        - in: body
          name: body
          description: Transaction creation payload
          required: true
          schema:
            $ref: "#/definitions/TransactionCreatePayload"
      produces:
        - application/json
      responses:
        "201":
          description: Transaction created successfully
          schema:
            $ref: "#/definitions/TransactionResponse"
        "400":
          description: Invalid Fields
        "401":
          description: Unauthorized
        "500":
          description: Internal Server Error
  /user/transaction/{transactionId}:
    put:
      security:
        - Bearer: []
      tags:
        - Transaction Module
      summary: Update Transaction
      description: API for updating transaction details (only editable fields)
      parameters:
        - in: header
          name: Authorization
          description: Attach Bearer JWT token
          type: string
          required: true
        - in: path
          name: transactionId
          type: string
          required: true
          description: ID of transaction to update
        - in: body
          name: body
          description: Transaction update payload (only editable fields)
          required: true
          schema:
            $ref: "#/definitions/TransactionUpdatePayload"
      produces:
        - application/json
      responses:
        "200":
          description: Transaction updated successfully
          schema:
            $ref: "#/definitions/TransactionResponse"
        "400":
          description: Invalid Fields
        "401":
          description: Unauthorized
        "404":
          description: Transaction not found
        "500":
          description: Internal Server Error

securityDefinitions:
  Bearer:
    type: apiKey
    name: Authorization
    in: header
definitions:
  User:
    properties:
      email:
        type: string
        description: user email
      password:
        type: string
        description: user password
      firstName:
        type: string
        description: user first name
      lastName:
        type: string
        description: user last name
  Login:
    properties:
      email:
        type: string
        description: user email
      password:
        type: string
        description: user password
  ApiResponse:
    type: object
    properties:
      status:
        type: integer
      message:
        type: string
      body:
        type: object
        properties:
          id:
            type: string
          email:
            type: string
  LoginResponse:
    type: object
    properties:
      token:
        type: string
  UserProfile:
    type: object
    properties:
      firstName:
        type: string
      lastName:
        type: string
  Transaction:
    type: object
    properties:
      id:
        type: string
        description: Transaction ID
        readOnly: true
      date:
        type: string
        format: date-time
        description: Transaction date
        readOnly: true
      description:
        type: string
        description: Transaction description
      amount:
        type: number
        description: Transaction amount
      balance:
        type: number
        description: Account balance after transaction
        readOnly: true
      transactionType:
        type: string
        description: Type of transaction (editable)
      category:
        type: string
        description: Transaction category (editable)
      notes:
        type: string
        description: User notes (editable)
  TransactionCreatePayload:
    type: object
    required:
      - description
      - amount
      - transactionType
    properties:
      description:
        type: string
        description: Transaction description
      amount:
        type: number
        description: Transaction amount
      transactionType:
        type: string
        description: Type of transaction
        enum: ["Electronic", "Cash", "Check", "Transfer"]
      category:
        type: string
        description: Transaction category
        enum: ["Food", "Transportation", "Entertainment", "Shopping", "Bills", "Other"]
      notes:
        type: string
        description: User notes
  TransactionUpdatePayload:
    type: object
    properties:
      transactionType:
        type: string
        description: Type of transaction (editable)
        enum: ["Electronic", "Cash", "Check", "Transfer"]
      category:
        type: string
        description: Transaction category (editable)
        enum: ["Food", "Transportation", "Entertainment", "Shopping", "Bills", "Other"]
      notes:
        type: string
        description: User notes (editable)
  TransactionsResponse:
    type: object
    properties:
      status:
        type: integer
      message:
        type: string
      body:
        type: array
        items:
          $ref: "#/definitions/Transaction"
  TransactionResponse:
    type: object
    properties:
      status:
        type: integer
      message:
        type: string
      body:
        $ref: "#/definitions/Transaction"